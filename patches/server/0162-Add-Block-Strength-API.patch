From 0e5471379a4f2c68d0167f5a87b8b0ad1c89aa96 Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Sat, 15 Sep 2018 01:44:04 -0700
Subject: [PATCH] Add Block Strength API


diff --git a/src/main/java/net/minecraft/server/Block.java b/src/main/java/net/minecraft/server/Block.java
index a784e04a..db09989e 100644
--- a/src/main/java/net/minecraft/server/Block.java
+++ b/src/main/java/net/minecraft/server/Block.java
@@ -250,7 +250,17 @@ public class Block {
         return this;
     }
 
+    public float getDefaultStrength() {
+        return this.strength;
+    }
+
+    public float getStrength(World world, BlockPosition blockposition) { return g(world, blockposition);}
     public float g(World world, BlockPosition blockposition) {
+        // SportPaper start
+        if (world != null && blockposition != null && world.changedBlockStrengthMap.containsKey(blockposition)) {
+            return world.changedBlockStrengthMap.get(blockposition);
+        }
+        // SportPaper end
         return this.strength;
     }
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 138b17f3..0bb29ec7 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -144,6 +144,7 @@ public abstract class World implements IBlockAccess {
     public final Map<Explosion.CacheKey, Float> explosionDensityCache = new HashMap<Explosion.CacheKey, Float>(); // PaperSpigot - Optimize explosions
     public final CraftingManager craftingManager = new CraftingManager();
     public final RecipesFurnace recipesFurnace = new RecipesFurnace();
+    public final Map<BlockPosition, Float> changedBlockStrengthMap = new HashMap<>(); // SportPaper
 
     public static long chunkToKey(int x, int z)
     {
@@ -417,6 +418,7 @@ public abstract class World implements IBlockAccess {
                 // CraftBukkit end
                 return false;
             } else {
+                changedBlockStrengthMap.remove(blockposition);
                 Block block1 = iblockdata1.getBlock();
 
                 if (block.p() != block1.p() || block.r() != block1.r()) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
index 14b2f040..7907c983 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
@@ -341,7 +341,9 @@ public class CraftChunk implements Chunk {
                     for(int y = 0; y < 16; y++) {
                         for(int z = 0; z < 16; z++) {
                             if(section.getType(x, y, z).getBlock().getMaterial() == originalMaterial) {
-                                chunk.e(new BlockPosition(x, y + section.getYPosition(), z)); // remove the tile entity
+                                BlockPosition blockPosition = new BlockPosition(x, y + section.getYPosition(), z);
+                                chunk.e(blockPosition); // remove the tile entity
+                                worldServer.changedBlockStrengthMap.remove(blockPosition);
                                 section.setType(x, y, z, nmsReplacement);
                                 count++;
                             }
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
index ecef909a..9897e0b4 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
@@ -3,7 +3,9 @@ package org.bukkit.craftbukkit.block;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import net.minecraft.server.*;
 
@@ -168,6 +170,31 @@ public class CraftBlock implements Block {
         return (byte) chunk.getHandle().getBrightness(EnumSkyBlock.BLOCK, new BlockPosition(this.x, this.y, this.z));
     }
 
+    private net.minecraft.server.BlockPosition blockPosition() {
+        return new BlockPosition(x, y, z);
+    }
+
+    private Map<BlockPosition, Float> getChangedBlockStrengthMap() {
+        return chunk.getHandle().world.changedBlockStrengthMap;
+    }
+
+    public void resetBlockStrength() {
+        getChangedBlockStrengthMap().remove(blockPosition());
+    }
+
+    public void setBlockStrength(float blockStrength) {
+        net.minecraft.server.Block block = getNMSBlock();
+        if (block.getDefaultStrength() == blockStrength) {
+            getChangedBlockStrengthMap().remove(blockPosition());
+        } else {
+            getChangedBlockStrengthMap().put(blockPosition(), blockStrength);
+        }
+    }
+
+    public float getBlockStrength() {
+        return getNMSBlock().getStrength(chunk.getHandle().world, blockPosition());
+    }
+
 
     public Block getFace(final BlockFace face) {
         return getRelative(face, 1);
-- 
2.50.1

