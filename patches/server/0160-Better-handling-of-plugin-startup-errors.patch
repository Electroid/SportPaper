From 8fed7a685398941788f13ad1266ec2c7f8519883 Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Tue, 28 Aug 2018 20:09:00 -0700
Subject: [PATCH] Better handling of plugin startup errors


diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index 5123daa4..79a53cc4 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -358,7 +358,7 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
     }
 
     protected void z() {
-        System.exit(0);
+        System.exit(abnormalTermination ? 1 : 0);
     }
 
     public void B() { // CraftBukkit - fix decompile error
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index c4c0c632..61300499 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -137,6 +137,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
     private @Nullable Instant suspendedAt;
     private int interruptions;
     protected Thread watchdogThread;
+    protected boolean abnormalTermination;
     // SportBukkit end
 
     public MinecraftServer(OptionSet options, Proxy proxy, File file1) {
@@ -722,6 +723,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
                 }
                 // Spigot end
             } else {
+                this.abnormalTermination = true; // SportBukkit
                 this.a((CrashReport) null);
             }
         } catch (Throwable throwable) {
@@ -732,6 +734,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
                 MinecraftServer.LOGGER.error( "\tCause of unexpected exception was", throwable.getCause() );
             }
             // Spigot End
+            this.abnormalTermination = true; // SportBukkit
             CrashReport crashreport = null;
 
             if (throwable instanceof ReportedException) {
@@ -1100,6 +1103,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
             // CraftBukkit end
         } catch (Exception exception) {
             MinecraftServer.LOGGER.fatal("Failed to start the minecraft server", exception);
+            System.exit(1); // Sportbukkit
         }
 
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index ce0cb9eb..dba05d97 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -230,6 +230,12 @@ public final class CraftServer implements Server {
         return overrideAllCommandBlockCommands || SharedConfig.config.getStringList("commands.command-block-overrides").contains(command);
     }
 
+    private void pluginFailedToLoad(Plugin plugin) {
+        if(PaperSpigotConfig.requireAllPlugins) {
+            throw new RuntimeException("Required plugin " + plugin.getDescription().getFullName() + " failed to load (server will shutdown)");
+        }
+    }
+
     public void loadPlugins() {
         pluginManager.registerInterface(JavaPluginLoader.class);
 
@@ -244,6 +250,7 @@ public final class CraftServer implements Server {
                     plugin.onLoad();
                 } catch (Throwable ex) {
                     Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " initializing " + plugin.getDescription().getFullName() + " (Is it up to date?)", ex);
+                    pluginFailedToLoad(plugin);
                 }
             }
         } else {
@@ -316,6 +323,10 @@ public final class CraftServer implements Server {
         } catch (Throwable ex) {
             Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " loading " + plugin.getDescription().getFullName() + " (Is it up to date?)", ex);
         }
+
+        if(!plugin.isEnabled()) {
+            pluginFailedToLoad(plugin);
+        }
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 337c665c..d1ce7a86 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -235,6 +235,7 @@ public class Main {
                 MinecraftServer.main(options);
             } catch (Throwable t) {
                 t.printStackTrace();
+                System.exit(1); // SportBukkit
             }
         }
     }
diff --git a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
index 31279983..9360eac7 100644
--- a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
+++ b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
@@ -127,6 +127,11 @@ public class PaperSpigotConfig
         emptyServerSuspendDelay = getString("settings.empty-server-suspend", emptyServerSuspendDelay);
     }
 
+    public static boolean requireAllPlugins = false;
+    private static void requireAllPlugins() {
+        requireAllPlugins = getBoolean("settings.require-all-plugins", requireAllPlugins);
+    }
+
     public static double strengthEffectModifier;
     public static double weaknessEffectModifier;
     private static void effectModifiers()
-- 
2.50.1

