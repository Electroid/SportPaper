From f6ce2f406a872015b78c115c6dbf8b0843489020 Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Fri, 17 Aug 2018 20:57:00 -0700
Subject: [PATCH] Shame on you Mojang

Someone wrote some horrible code that throws a world accessing task
onto the HTTP DOWNLOADER Thread Pool, for an activity that is not even
heavy enough to warrant async operation.

This then triggers async chunk loads!

What in the hell were you thinking?

diff --git a/src/main/java/net/minecraft/server/BlockBeacon.java b/src/main/java/net/minecraft/server/BlockBeacon.java
index a73d7b13..01565641 100644
--- a/src/main/java/net/minecraft/server/BlockBeacon.java
+++ b/src/main/java/net/minecraft/server/BlockBeacon.java
@@ -62,8 +62,10 @@ public class BlockBeacon extends BlockContainer {
     }
 
     public static void f(final World world, final BlockPosition blockposition) {
+        /*
         HttpUtilities.a.submit(new Runnable() {
             public void run() {
+        */ // Paper
                 Chunk chunk = world.getChunkAtWorldCoords(blockposition);
 
                 for (int i = blockposition.getY() - 1; i >= 0; --i) {
@@ -76,8 +78,10 @@ public class BlockBeacon extends BlockContainer {
                     IBlockData iblockdata = world.getType(blockposition1);
 
                     if (iblockdata.getBlock() == Blocks.BEACON) {
+                        /*
                         ((WorldServer) world).postToMainThread(new Runnable() {
                             public void run() {
+                            */ // Paper
                                 TileEntity tileentity = world.getTileEntity(blockposition);
 
                                 if (tileentity instanceof TileEntityBeacon) {
@@ -85,12 +89,16 @@ public class BlockBeacon extends BlockContainer {
                                     world.playBlockAction(blockposition, Blocks.BEACON, 1, 0);
                                 }
 
+                                /*
                             }
                         });
+                        */ // Paper
                     }
                 }
 
+                /*
             }
         });
+        */ // Paper
     }
 }
-- 
2.50.1

