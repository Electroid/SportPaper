From 3a297b7763c4e609f44e9fbc48b5c8090b1030a7 Mon Sep 17 00:00:00 2001
From: linsaftw <linsaftw@users.noreply.github.com>
Date: Sun, 25 Apr 2021 11:53:18 -0300
Subject: [PATCH] Patch Book Exploits


diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
index 0b5ada01..91d61016 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
@@ -33,8 +33,10 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     static final ItemMetaKey BOOK_PAGES = new ItemMetaKey("pages");
     static final ItemMetaKey RESOLVED = new ItemMetaKey("resolved");
     static final ItemMetaKey GENERATION = new ItemMetaKey("generation");
-    static final int MAX_PAGE_LENGTH = Short.MAX_VALUE; // TODO: Check me
-    static final int MAX_TITLE_LENGTH = 0xffff;
+    static final int MAX_PAGE_LENGTH = 340; // SportPaper - Limit max page length to 340
+    static final int MAX_TITLE_LENGTH = 32; // SportPaper - Limit max title length to 32
+    static final int MAX_PAGES = 50; // SportPaper - Limit pages to 50
+    static final int MAX_AUTHOR_LENGTH = 16; // SportPaper - Limit author name length to 16
 
     protected String title;
     protected String author;
@@ -61,11 +63,13 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
         super(tag);
 
         if (tag.hasKey(BOOK_TITLE.NBT)) {
-            this.title = limit( tag.getString(BOOK_TITLE.NBT), 1024 ); // Spigot
+            // SportPaper - Apply title limit
+            this.title = limit( tag.getString(BOOK_TITLE.NBT), MAX_TITLE_LENGTH ); // Spigot
         }
 
         if (tag.hasKey(BOOK_AUTHOR.NBT)) {
-            this.author = limit( tag.getString(BOOK_AUTHOR.NBT), 1024 ); // Spigot
+            // SportPaper - Apply author limit
+            this.author = limit( tag.getString(BOOK_AUTHOR.NBT), MAX_AUTHOR_LENGTH ); // Spigot
         }
 
         boolean resolved = false;
@@ -80,7 +84,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
         if (tag.hasKey(BOOK_PAGES.NBT) && handlePages) {
             NBTTagList pages = tag.getList(BOOK_PAGES.NBT, 8);
 
-            for (int i = 0; i < pages.size(); i++) {
+            // SportPaper - Apply page limit
+            for (int i = 0; i < Math.min(pages.size(), MAX_PAGES); i++) {
                 String page = pages.getString(i);
                 if (resolved) {
                     try {
@@ -90,7 +95,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
                         // Ignore and treat as an old book
                     }
                 }
-                addPage( limit( page, 2048 ) ); // Spigot
+                // SportPaper - Apply page limit
+                addPage( limit( page, MAX_PAGE_LENGTH ) ); // Spigot
             }
         }
     }
@@ -104,9 +110,18 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
 
         Iterable<?> pages = SerializableMeta.getObject(Iterable.class, map, BOOK_PAGES.BUKKIT, true);
         if(pages != null) {
+            int pageCount = 0;
+
             for (Object page : pages) {
-                if (page instanceof String) {
-                    addPage((String) page);
+                // SportPaper - Limit page iterations
+                if (pageCount < MAX_PAGES) {
+                    if (page instanceof String) {
+                        addPage((String) page);
+                    }
+
+                    pageCount++;
+                } else {
+                    break;
                 }
             }
         }
@@ -186,12 +201,12 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     public boolean setTitle(final String title) {
         if (title == null) {
             this.title = null;
-            return true;
-        } else if (title.length() > MAX_TITLE_LENGTH) {
-            return false;
+        } else {
+            // SportPaper - Simplify & improve title handling
+            this.title = title.substring(0, Math.min(title.length(), MAX_PAGE_LENGTH));
         }
 
-        this.title = title;
+        // SportPaper - Always return true
         return true;
     }
 
@@ -213,7 +228,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
             throw new IllegalArgumentException("Invalid page number " + page + "/" + pages.size());
         }
 
-        String newText = text == null ? "" : text.length() > MAX_PAGE_LENGTH ? text.substring(0, MAX_PAGE_LENGTH) : text;
+        // SportPaper - Simplify page handling
+        String newText = text == null ? "" : text.substring(0, Math.min(text.length(), MAX_PAGE_LENGTH));
         pages.set(page - 1, CraftChatMessage.fromString(newText, true)[0]);
     }
 
@@ -224,14 +240,22 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     }
 
     public void addPage(final String... pages) {
-        for (String page : pages) {
-            if (page == null) {
-                page = "";
-            } else if (page.length() > MAX_PAGE_LENGTH) {
-                page = page.substring(0, MAX_PAGE_LENGTH);
-            }
+        // SportPaper - Limit page iterations
+        for (int i = 0; i < Math.min(pages.length, MAX_PAGES); i++) {
+            // SportPaper - Apply page limit
+            if (getPageCount() < MAX_PAGES) {
+                String page = pages[i];
+
+                if (page == null) {
+                    page = "";
+                } else if (page.length() > MAX_PAGE_LENGTH) {
+                    page = page.substring(0, MAX_PAGE_LENGTH);
+                }
 
-            this.pages.add(CraftChatMessage.fromString(page, true)[0]);
+                this.pages.add(CraftChatMessage.fromString(page, true)[0]);
+            } else {
+                break;
+            }
         }
     }
 
@@ -257,9 +281,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
 
     public void setPages(List<String> pages) {
         this.pages.clear();
-        for (String page : pages) {
-            addPage(page);
-        }
+        // SportPaper - Convert list to array to reuse methods
+        addPage(pages.toArray(new String[0]));
     }
 
     private boolean isValidPage(int page) {
-- 
2.31.1

