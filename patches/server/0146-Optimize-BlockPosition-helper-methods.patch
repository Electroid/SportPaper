From b16ed89aacc7eb0c5dbd7f8c1c8dc898e6572d1a Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Tue, 21 Aug 2018 16:50:53 -0700
Subject: [PATCH] Optimize BlockPosition helper methods

Resolves #1338

diff --git a/src/main/java/net/minecraft/server/BlockPosition.java b/src/main/java/net/minecraft/server/BlockPosition.java
index 0d0e0abb..4160d545 100644
--- a/src/main/java/net/minecraft/server/BlockPosition.java
+++ b/src/main/java/net/minecraft/server/BlockPosition.java
@@ -52,59 +52,98 @@ public class BlockPosition extends BaseBlockPosition {
     }
 
     public BlockPosition up() {
-        return this.up(1);
+        return new BlockPosition(this.getX(), this.getY() + 1, this.getZ()); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition up(int i) {
-        return this.shift(EnumDirection.UP, i);
+        return i == 0 ? this : new BlockPosition(this.getX(), this.getY() + i, this.getZ()); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition down() {
-        return this.down(1);
+        return new BlockPosition(this.getX(), this.getY() - 1, this.getZ()); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition down(int i) {
-        return this.shift(EnumDirection.DOWN, i);
+        return i == 0 ? this : new BlockPosition(this.getX(), this.getY() - i, this.getZ()); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition north() {
-        return this.north(1);
+        return new BlockPosition(this.getX(), this.getY(), this.getZ() - 1); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition north(int i) {
-        return this.shift(EnumDirection.NORTH, i);
+        return i == 0 ? this : new BlockPosition(this.getX(), this.getY(), this.getZ() - i); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition south() {
-        return this.south(1);
+        return new BlockPosition(this.getX(), this.getY(), this.getZ() + 1); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition south(int i) {
-        return this.shift(EnumDirection.SOUTH, i);
+        return i == 0 ? this : new BlockPosition(this.getX(), this.getY(), this.getZ() + i); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition west() {
-        return this.west(1);
+        return new BlockPosition(this.getX() - 1, this.getY(), this.getZ()); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition west(int i) {
-        return this.shift(EnumDirection.WEST, i);
+        return i == 0 ? this : new BlockPosition(this.getX() - i, this.getY(), this.getZ()); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition east() {
-        return this.east(1);
+        return new BlockPosition(this.getX() + 1, this.getY(), this.getZ()); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition east(int i) {
-        return this.shift(EnumDirection.EAST, i);
+        return i == 0 ? this : new BlockPosition(this.getX() + i, this.getY(), this.getZ()); // Paper - Optimize BlockPosition
     }
 
     public BlockPosition shift(EnumDirection enumdirection) {
-        return this.shift(enumdirection, 1);
+        // Paper Start - Optimize BlockPosition
+        switch(enumdirection) {
+            case UP:
+                return new BlockPosition(this.getX(), this.getY() + 1, this.getZ());
+            case DOWN:
+                return new BlockPosition(this.getX(), this.getY() - 1, this.getZ());
+            case NORTH:
+                return new BlockPosition(this.getX(), this.getY(), this.getZ() - 1);
+            case SOUTH:
+                return new BlockPosition(this.getX(), this.getY(), this.getZ() + 1);
+            case WEST:
+                return new BlockPosition(this.getX() - 1, this.getY(), this.getZ());
+            case EAST:
+                return new BlockPosition(this.getX() + 1, this.getY(), this.getZ());
+            default:
+                return new BlockPosition(this.getX() + enumdirection.getAdjacentX(), this.getY() + enumdirection.getAdjacentY(), this.getZ() + enumdirection.getAdjacentZ());
+        }
+        // Paper End
+
     }
 
     public BlockPosition shift(EnumDirection enumdirection, int i) {
-        return i == 0 ? this : new BlockPosition(this.getX() + enumdirection.getAdjacentX() * i, this.getY() + enumdirection.getAdjacentY() * i, this.getZ() + enumdirection.getAdjacentZ() * i);
+        // Paper Start - Optimize BlockPosition
+        if (i == 0) {
+            return this;
+        }
+        switch(enumdirection) {
+            case UP:
+                return new BlockPosition(this.getX(), this.getY() + i, this.getZ());
+            case DOWN:
+                return new BlockPosition(this.getX(), this.getY() - i, this.getZ());
+            case NORTH:
+                return new BlockPosition(this.getX(), this.getY(), this.getZ() - i);
+            case SOUTH:
+                return new BlockPosition(this.getX(), this.getY(), this.getZ() + i);
+            case WEST:
+                return new BlockPosition(this.getX() - i, this.getY(), this.getZ());
+            case EAST:
+                return new BlockPosition(this.getX() + i, this.getY(), this.getZ());
+            default:
+                return new BlockPosition(this.getX() + enumdirection.getAdjacentX() * i, this.getY() + enumdirection.getAdjacentY() * i, this.getZ() + enumdirection.getAdjacentZ() * i);
+        }
+        // Paper End
+
     }
 
     public BlockPosition c(BaseBlockPosition baseblockposition) {
-- 
2.50.1

